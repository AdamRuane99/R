batting <- read.csv('Batting.csv')
location <- "C:/Users/Adam/Documents/GitHub/moneyball/Moneyball-Data_Project1/"
location <- "C:/Users/Adam/Documents/GitHub/moneyball/Moneyball-Data_Project1/Batting.csv"
batting <- read.csv(location)
> batting <- read.csv(location)
batting <- read.csv(location)
print(head(batting))
str(batting)
print(head(batting$AB))
print(head(batting$X2B))
batting$BA <- batting$H / batting$AB
tail(batting$BA,5)
batting$1B >- batting$H - batting$X2B - batting$X3B - batting$HR
batting$"1B" >- batting$H - batting$X2B - batting$X3B - batting$HR
View(batting)
batting$X1B >- batting$H - batting$X2B - batting$X3B - batting$HR
print(head(batting))
batting$X1B >- batting$H - batting$X2B - batting$X3B - batting$HR
# On Base Percentage
batting$OBP <- (batting$H + batting$BB + batting$HBP)/(batting$AB + batting$BB + batting$HBP + batting$SF)
# Creating Slugging Average (SLG)
batting$SLG <- ((1 * batting$X1B) + (2 * batting$X2B) + (3 * batting$X3B) + (4 * batting$HR) ) / batting$AB
View(batting)
# Creating Slugging Average (SLG)
batting$SLG <- ((1 * batting$X1B) + (2 * batting$X2B) + (3 * batting$X3B) + (4 * batting$HR) ) / batting$AB
batting$X1B >- batting$H - batting$X2B - batting$X3B - batting$HR
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
batting <- read.csv(location)
# Creating Slugging Average (SLG)
batting$SLG <- ((1 * batting$X1B) + (2 * batting$X2B) + (3 * batting$X3B) + (4 * batting$HR) ) / batting$AB
View(batting)
View(batting)
print(location)
location <-  "C:/Users/Adam/Documents/GitHub/moneyball/Moneyball-Data_Project1/Batting.csv"
location_salaries <-  "C:/Users/Adam/Documents/GitHub/moneyball/Moneyball-Data_Project1/Salaries.csv"
sal <- read.csv(location_salaries)
print(head(sal))
summary(batting)
summary(sal)
batting <- subset(batting,yearID >= 1985)
summary(batting)
combo <- merge(batting,sal,by=c('playerID','yearID'))
summary(combo)
lost_players <- subset(combo,playerID %in% c('giambja01','damonjo01','saenzol01') )
print(head(lost_players))
avail.players <- filter(combo,yearID==2001)
library(dplyr)
avail.players <- filter(combo,yearID==2001)
library(ggplot2)
ggplot(avail.players,aes(x=OBP,y=salary)) + geom_point()
ggplot(avail.players,aes(x=OBP,y=salary)) + geom_point()
View(avail.players)
# On Base Percentage
batting$OBP <- (batting$H + batting$BB + batting$HBP)/(batting$AB + batting$BB + batting$HBP + batting$SF)
batting <- subset(batting,yearID >= 1985)
summary(batting)
combo <- merge(batting,sal,by=c('playerID','yearID'))
lost_players <- subset(combo,playerID %in% c('giambja01','damonjo01','saenzol01') )
print(head(lost_players))
library(ggplot2)
ggplot(avail.players,aes(x=OBP,y=salary)) + geom_point()
avail.players <- filter(avail.players,salary<7000000,OBP>0)
avail.players <- filter(avail.players,AB >= 500)
possible_suggestions <- head(arrange(avail.players,desc(OBP)),10)
# Pre-load libaries
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(lubridate))
install.packages("lubridate")
suppressPackageStartupMessages(library(lubridate))
install.packages("foreach")
(foreach)
##install.packages("foreach")
suppressPackageStartupMessages(library(foreach))
install.packages("doParrallel")
install.packages("fst")
install.packages("caret")
suppressPackageStartupMessages(library(fst))
suppressPackageStartupMessages(library(caret))
# Core Parameters
filter_AB = 100 # look at batters with AB > n
install.packages("doParrallel")
suppressPackageStartupMessages(library(doParallel))
filter_IPouts = 120 # look at pitchers with IPouts > n
n_latest = 2017 # latest year
n_ahead = 3 # Predict n years ahead
save_csv = TRUE
n_seed = 1234
Batt_data = "C:\Users\Adam\Documents\GitHub\moneyball\cache_data\lahman/Batting.csv"
People_data = "C:\Users\Adam\Documents\GitHub\moneyball\cache_data\lahman/People.csv"
Pitching_data = "C:\Users\Adam\Documents\GitHub\moneyball\cache_data\lahman/Pitching.csv"
Batt_data = "C:/Users/Adam/Documents/GitHub/moneyball/cache_data/lahman/Batting.csv"
People_data = "C:/Users/Adam/Documents/GitHub/moneyball/cache_data/lahman/People.csv"
Pitching_data = "C:/Users/Adam/Documents/GitHub/moneyball/cache_data/lahman/Pitching.csv"
source('~/GitHub/moneyball/step_1_data_wrangling.R', echo=TRUE)
install.packages("fst")
d_master = fread(People_data)
install.packages("caret")
d_master = fread(People_data)
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(dplyr))
##install.packages("lubridate")
suppressPackageStartupMessages(library(lubridate))
##install.packages("foreach")
suppressPackageStartupMessages(library(foreach))
install.packages("doParrallel")
suppressPackageStartupMessages(library(doParallel))
install.packages("fst")
suppressPackageStartupMessages(library(fst))
install.packages("caret")
suppressPackageStartupMessages(library(caret))
d_master = fread(People_data)
d_bat_raw = fread(Batt_data)
# Pitching
d_pit_raw = fread(Pitching_data)
